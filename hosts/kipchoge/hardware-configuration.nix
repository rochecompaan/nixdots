# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot = {
    kernelParams = [
      "ip=192.168.1.4::192.168.1.1:255.255.255.0::enp10s0:off"
    ];
    initrd = {
      availableKernelModules = [
        "nvme"
        "xhci_pci"
        "ahci"
        "usbhid"
        "usb_storage"
        "uas"
        "sd_mod"
        # Network module for entropy
        "r8169"
      ];

      network.enable = true;

      # Minimal list of modules to use the EFI system partition and the YubiKey
      kernelModules = [
        "vfat"
        "nls_cp437"
        "nls_iso8859-1"
        "usbhid"
      ];

      luks = {
        devices = {
          "root" = {
            device = "/dev/disk/by-uuid/bd6b93d9-6d74-4d3b-9e03-a18514fceae5";
          };
          "home" = {
            device = "/dev/disk/by-uuid/485cf243-54ad-44da-a4bd-a3ae98a03769";
          };
        };
      };
    };
    kernelModules = [ "kvm-amd" ];
    extraModulePackages = [ ];
  };

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/bc03aef7-32dc-44f1-b7a1-40ec28a48869";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/888C-3B8B";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/cc4e229a-6979-4a47-9c01-1edeecb9821f";
    fsType = "ext4";
  };

  fileSystems."/nix" = {
    device = "/dev/nvme1n1p1";
    fsType = "ext4";
  };

  fileSystems."/var" = {
    device = "/dev/nvme1n1p2";
    fsType = "ext4";
  };

  swapDevices = [ { device = "/dev/disk/by-uuid/e575ae7d-ec7f-458f-928c-2c720ddadde4"; } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp9s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp8s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";

  # Enable OpenGL
  hardware = {
    cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
    graphics = {
      enable = true;
      enable32Bit = true;
      extraPackages = with pkgs; [
        nvidia-vaapi-driver
        vaapiVdpau
        libvdpau-va-gl
      ];
    };

    nvidia = {
      modesetting.enable = true;
      powerManagement.enable = lib.mkForce true;
      powerManagement.finegrained = lib.mkForce false;
      open = false;
      nvidiaSettings = true;
      package = config.boot.kernelPackages.nvidiaPackages.stable;
    };
    sane.enable = true;
  };

}
